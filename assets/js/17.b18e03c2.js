(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{228:function(t,e,n){"use strict";n.r(e);var s=n(0),a=Object(s.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"ios-switch-scanning"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ios-switch-scanning"}},[t._v("#")]),t._v(" iOS Switch scanning")]),t._v(" "),n("p",[t._v("So pasco is unique because we have thought about early switch scanners - and seasoned switch scanners from the start of development. The problem for many switch scanning users is they either learn to use a "),n("strong",[t._v("easy")]),t._v(" approach within a specific app - but usually the user is then "),n("strong",[t._v("stuck")]),t._v(" within the app; or they have to use the built-in iOS switch scanning which is often inefficient when using it for communication because you have to scan through screen elements and actions that you don't need access to.")]),t._v(" "),n("p",[t._v('In pasco you can either use our built-in scanning methods - or use the ios scanning method. How? Well to use the iOS scanning method we recommend setting up a switch recipe which "hold at point". With one switch - create the recipe by tapping at the point of the right arrow of the navigation menu. Put a timeout on the recipe - and this will allow the user to go back to normal scanning if they don\'t press anything after a while.')]),t._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("This is far from perfect")]),t._v(" "),n("p",[t._v("To make this easier Apple really need to allow a long-press to toggle turning a defined recipe on or off. But you can't do that yet. Want it? "),n("a",{attrs:{href:"http://bugreport.apple.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("Please tell them"),n("OutboundLink")],1)])])])},[],!1,null,null,null);e.default=a.exports}}]);